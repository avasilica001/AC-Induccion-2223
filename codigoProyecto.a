LED_R		EQU	P2.0
BUZZER		EQU	P2.1
MAS_BTN		EQU	P3.0
MENOS_BTN	EQU	P3.1
ONOFF_BTN	EQU	P3.2
SENSOR		EQU	P3.3
;ADC_TEMP	EQU	P5.0
DISPLAY		EQU	0X30
DP_A		EQU	P0.0
DP_B		EQU	P0.1
DP_C		EQU	P0.2
DP_D		EQU	P0.3
DP_E		EQU	P0.4
DP_F		EQU	P0.5
DP_G		EQU	P0.6
ESTADO		EQU	0X20
EVENTO		EQU	0X21
CONT1		EQU	0X2B
CONT2		EQU	0X2C
TICK100MS	EQU	0X22.0
MS100		EQU	0X23
MS1002		EQU	0X24
IEN0		EQU	0XA8
DP_ENCENDIDO	EQU	0X22.1
PWMP		EQU	0xFE
PWM0		EQU	0xFC
;IEN0		EQU	0xA8

	AJMP 	INICIO

;ORG 0X7B

INICIO:
	ACALL 	INICIALIZACIONES

BUCLE:
	ACALL 	MAQUINAESTADOS
	AJMP	BUCLE

INICIALIZACIONES:
; 	MOV	A,#12	Probar que debugea bien
	MOV	ESTADO,#0
	MOV	EVENTO,#0
	MOV 	CONT1,#0
	MOV 	CONT2,#0
	MOV 	MS100, #0
	MOV	MS1002, #0 
	CLR	A
	CLR	DP_ENCENDIDO
	CLR	LED_R
	CLR	BUZZER
	CLR	MAS_BTN
	CLR	MENOS_BTN
	CLR	ONOFF_BTN
	CLR	SENSOR
	CLR	DISPLAY
	CLR 	TICK100MS
	CLR	DP_A
	CLR	DP_B
	CLR	DP_C
	CLR	DP_D 
	CLR	DP_E
	CLR	DP_F
	CLR	DP_G
	CLR	LED_R
	ORL	TMOD,#00000010b
	ANL	TMOD,#11110010b; INICIALIZAMOS EL TIMER DE 8 BITS
	ACALL	ENCENDER_TIMER
;	CLR	ADC_TEMP
	RET


MAQUINAESTADOS:
	MOV	A,ESTADO
	RL	A
	MOV 	DPTR,#EST_TABL
	JMP 	@A+DPTR

EST_TABL:
	AJMP	ESTADO0
	AJMP	ESTADO1
	AJMP	ESTADO2


;***********************************************ESTADO 0 --> REPOSO
ESTADO0:
	ACALL	GEN_EVE0
	MOV	A,EVENTO
	RL 	A; ROTA ACUM A LA IZQ
	MOV 	DPTR,#EV0_TBL
	JMP 	@A+DPTR

EV0_TBL:

	AJMP 	EV00_ESPERA ;EVENTO VACIO
	AJMP 	EV01_PULSADOON ;EVENTO AL PULSAR EL BOTON ON

	

GEN_EVE0:
	;SI SE HA PULSADO EL BOTON DE ON
	JB 	ONOFF_BTN, CON00
	RET


EV00_ESPERA:
	RET

EV01_PULSADOON:
	SETB	DP_ENCENDIDO
	ACALL	MOSTRAR_DP_0
	SETB	LED_R
	MOV 	ESTADO,#01
	RET

CON00:
	MOV EVENTO,#01
	RET

;***********************************************ESTADO 1 --> BUZZER 200MS
ESTADO1:
	ACALL	GEN_EVE1
	MOV	A,EVENTO
	RL 	A; ROTA ACUM A LA IZQ
	MOV 	DPTR,#EV1_TBL
	JMP 	@A+DPTR

EV1_TBL:
	AJMP 	EV10_ESPERA ;EVENTO VACIO
	AJMP 	EV11_TERMINAR ;EVENTO AL PULSAR EL BOTON ON
	AJMP	EV12_SEGUIR

	

GEN_EVE1:
	;PITIDO
	SETB 	BUZZER
	MOV 	A, #0X2
	CLR	C
	SUBB	A, MS100
	;SE HA LLEGADO A LOS 200MS
	JZ	CON11
	JB 	TICK100MS,CON12
	MOV 	EVENTO,#0
	RET

EV10_ESPERA:
	RET

CON11:
	MOV 	EVENTO,#01
	RET

CON12:
	MOV 	EVENTO, #02
	RET

EV11_TERMINAR:
	CLR 	BUZZER
	MOV 	MS100, #0
	CLR 	TICK100MS
	MOV 	ESTADO,#02
        RET

EV12_SEGUIR:
 	CLR 	TICK100MS
	INC 	MS100
	RET
;***********************************************ESTADO 2 --> ESPERANDO RECIPIENTE
ESTADO2:
        ACALL	GEN_EVE2
        MOV 	A,EVENTO
        RL 	A
        MOV 	DPTR,#EV2_TABL
        JMP 	@A+DPTR


EV2_TABL:
	AJMP 	EV20_ESPERA
        AJMP 	EV21_ENCENDERDP
	AJMP	EV22_BUCLE
	AJMP	EV23_DETECTADO
	AJMP	EV24_15SEG
	AJMP	EV25_APAGARDP

GEN_EVE2:
	JB SENSOR, COND20
	;CONTADOR DE 500MS / MEDIO SEGUNDO
	MOV 	A, #0X5
	CLR	C
	SUBB	A, MS100
	;SE HA LLEGADO A LOS 500MS
	JZ	COND21

	;CONTADOR DE 15 SEGUNDOS
	MOV	A, #10010110b
	CLR	C
	SUBB	A, MS1002
	;SE HA LLEGADO A LOS 15 SEG
	JZ	COND23
	
	JB 	TICK100MS,COND22
	MOV 	EVENTO,#0
	RET

COND20:
	MOV 	EVENTO, #0X03
	RET

COND21:
	MOV 	EVENTO, #0X01
	RET

COND22:
	MOV 	EVENTO, #0X02
	RET

COND23:
	JB	DP_ENCENDIDO, EV25_APAGARDP
	JNB	DP_ENCENDIDO, EV21_ENCENDERDP
	RET

EV20_ESPERA:
	RET

EV21_ENCENDERDP:
	AJMP	MOSTRAR_DP_0
	RET

EV22_BUCLE:
	CLR	TICK100MS
	INC	MS100
	INC	MS1002
	RET

EV23_DETECTADO:
	MOV	ESTADO,#03
	AJMP	MOSTRAR_DP_0
	MOV 	MS100, #0
	MOV 	MS1002, #0
	CLR 	TICK100MS
        RET

EV24_15SEG:
	CLR	LED_R
	AJMP	APAGAR_DP
	MOV	ESTADO,#00
	MOV 	MS100, #0
	MOV 	MS1002, #0
	CLR	TICK100MS
        RET

EV25_APAGARDP:
	AJMP	APAGAR_DP
	RET


;***********************************************ESTADO 3 --> RECIPIENTE CORRECTO PUESTO
ESTADO3:
        ACALL	GEN_EVE3
        MOV 	A,EVENTO
        RL 	A
        MOV 	DPTR,#EV3_TABL
        JMP 	@A+DPTR


EV3_TABL:
	AJMP 	EV30_ESPERA
        AJMP 	EV31_1MIN
	AJMP	EV32_BUCLE
	AJMP	EV33_FUEGO

GEN_EVE3:
	JNB 	SENSOR, COND30
	JB	MAS_BTN, COND32
	;CONTADOR DE 15 SEGUNDOS
	MOV 	A, #10010110b
	CLR	C
	SUBB	A, MS100
	;SE HA LLEGADO A LOS 15 SEGUNDOS
	JZ	COND33
	;MIRAR SI ES LA 4TA VEZ QUE PASA POR HABER LLEGADO AL MINUTO
	MOV 	A, #0X4
	CLR	C
	SUBB	A, MS1002
	;SE HA LLEGADO AL MINUTO
	JZ	COND30
	;SI HAN PASADO 100MS
	JB 	TICK100MS,COND31
	MOV 	EVENTO,#0
	RET

COND30:
	MOV 	EVENTO, #0X01
	RET

COND31:
	MOV 	EVENTO, #0X02
	RET

COND32:
	MOV 	EVENTO, #0X03
	RET

COND33:
	INC	MS1002
	RET

EV30_ESPERA:
	RET

EV31_1MIN:
	CLR	LED_R
	AJMP	APAGAR_DP
	MOV 	MS100, #0
	MOV 	MS1002, #0
	CLR	TICK100MS
	MOV	ESTADO,#00
        RET

EV32_BUCLE:
	CLR	TICK100MS
	INC	MS100
	RET

EV33_FUEGO:
	AJMP	MOSTRAR_DP_1
	MOV 	MS100, #0
	MOV 	MS1002, #0
	CLR 	TICK100MS
	MOV	ESTADO,#04
        RET

;***********************************************ESTADO 4 --> FOGON FUNCIONANDO

ESTADO4:

        ACALL	GEN_EVE4
        MOV 	A,EVENTO
        RL 	A
        MOV 	DPTR,#EV4_TABL
        JMP 	@A+DPTR



EV4_TBL:
	AJMP	E40_ESPERA
	AJMP	E41_RESTAR
	AJMP	E42_SUMAR
	AJMP	E43_REPOSOH


GEN_EVE4:
	
	;CONTROLAR SI LA POTENCIA NO SOBREPASA DE 9 NI DE 0
	;CONTROLAR SI NO HAY CONTACTO 
	JB	MAS_BTN, CON41
	JB	MENOS_BTN, CON42


	RET


CON41:
	MOV EVENTO, 0X02
	RET

CON42;
	MOV EVENTO, 0X01
	RET

E40_ESPERA:
	RET

E42_SUMAR:
	ACALL	SUMAR
	MOV	A, DISPLAY
	CJNE	A,#103,SUMAR	;SOLO SUMA SI EL DP NO MUESTRA P
	MOV EVENTO, 0X00	;VOLVEMOS AL EEVENTO DE ESPERA
	RET



E41_RESTAR:
	MOV	A, DISPLAY
	JZ	ESTA_EN_0	;NO PUEDO BAJAR MAS DE 0
	ACALL	RESTAR
	RET

E43_REPOSOH:
	;ACTUALIZAR DP
	;PITIDO
	;APAGAR LED
	;ENCENDER DP H?
	RET

PWMN_TABLA:
	INC 	A
	MOVC 	A,@A+PC
	RET
	DB 	11111111B ;0
	DB 	11100101B ;1
	DB 	11001100B ;2
	DB 	10110010B ;3
	DB 	10011001b ;4
	DB 	01111111B ;5
	DB 	01100110B ;6
	DB 	01001100B ;7
	DB 	00110011B ;8
	DB 	00011001B ;9
	DB	01100111B ;P

SUMAR:
	MOV	PWMP, #4d	;VALOR DEL PWMP SIEMPRE IGUAL
	INC	DISPLAY
	MOV	A, DISPLAY
	ACALL	ACTUALIZAR_DP
	ACALL	ACTUALIZAR_PWMN
	RET

RESTAR:
	MOV	PWMP, #4d	;VALOR DEL PWMP SIEMPRE IGUAL
	DEC	DISPLAY
	MOV	A, DISPLAY
	ACALL	ACTUALIZAR_DP
	ACALL	ACTUALIZAR_PWMN
	RET

	RET
ACTUALIZAR_PWMN:
	MOV	A,DISPLAY
	ACALL	PWMN_TABLA	
	MOV	PWM0, A


ESTA_EN_0:
	MOV EVENTO, 0X00	;VOLVEMOS AL EEVENTO DE ESPERA
	RET
	
;***********************************************ESTADO 5 --> FOGON PAUSA

;***********************************************ESTADO 6 --> FOGON TERMINAR PAUSA

;***********************************************ESTADO 7 --> REPOSO TRAS FUNCIONAR

;-----------------------------------------------------


	;ACALL	PARPADEO_DP;SE INICIA EL TIMER15S Y SE TIENE EN CUENTA LOS 500MS ENCENDIDO Y 500MS APAGADO


MOSTRAR_DP_0:
	SETB DP_ENCENDIDO
	MOV A, #0
	ACALL BCD_7SEG
	MOV DISPLAY, A
	MOV P0, DISPLAY
	RET

MOSTRAR_DP_1:
	SETB DP_ENCENDIDO
	MOV A, #1
	ACALL BCD_7SEG
	MOV DISPLAY, A
	MOV P0, DISPLAY
	RET

APAGAR_DP:
	MOV A, #10
	ACALL BCD_7SEG
	MOV DISPLAY, A
	MOV P0, DISPLAY
	CLR DP_ENCENDIDO
	RET


BCD_7SEG:
	INC 	A
	MOVC 	A,@A+PC
	RET
	DB 	00111111b ;0
	DB 	00000110B ;1
	DB 	01011011B ;2
	DB 	01001111B ;3
	DB 	01100110b ;4
	DB 	01101101B ;5
	DB 	01111101B ;6
	DB 	00000111B ;7
	DB 	01111111B ;8
	DB 	01100111B ;9
	DB	00000000B ;display apagado
	DB	01100111B ;P
	DB	01110100B ;h
	DB 	01110110B ;H

ENCENDER_TIMER:			
	ORL 	IEN0,#10000010b
	MOV	TH0, #00111000b
	MOV 	TL0, #00111000b
	MOV 	CONT1,#0
	MOV 	CONT2,#0
	SETB 	TR0
	RET

APAGAR_TIMER:			
	ANL 	IEN0, #00000000b
        CLR 	TR0
	RET

INT_TIMER:	
	PUSH 	PSW
	PUSH 	ACC
	INC 	CONT1
	MOV 	A, #01111101b
	CLR 	C
	SUBB 	A, CONT1
	JNZ 	TIMERCON
	MOV 	CONT1, 	#0
	INC 	CONT2
	MOV 	A, #00001000b
	CLR 	C
	SUBB 	A, CONT2
	JNZ 	TIMERCON
	MOV 	CONT2, #0
	SETB 	TICK100MS
	;HAN PASADO 100MS
	POP 	ACC
	POP 	PSW
	RET
	;RETI

TIMERCON:
	POP 	ACC
	POP 	PSW
	RET
	;RETI

END


